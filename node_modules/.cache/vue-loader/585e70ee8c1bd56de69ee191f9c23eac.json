{"remainingRequest":"/Users/jordan.kasper/Documents/Repositories/vue-task-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jordan.kasper/Documents/Repositories/vue-task-app/src/components/addTask.vue?vue&type=style&index=0&id=2cd8099c&scoped=true&lang=css&","dependencies":[{"path":"/Users/jordan.kasper/Documents/Repositories/vue-task-app/src/components/addTask.vue","mtime":1583517226614},{"path":"/Users/jordan.kasper/Documents/Repositories/vue-task-app/node_modules/css-loader/dist/cjs.js","mtime":1583275294984},{"path":"/Users/jordan.kasper/Documents/Repositories/vue-task-app/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1583275300919},{"path":"/Users/jordan.kasper/Documents/Repositories/vue-task-app/node_modules/postcss-loader/src/index.js","mtime":1583275299276},{"path":"/Users/jordan.kasper/Documents/Repositories/vue-task-app/node_modules/cache-loader/dist/cjs.js","mtime":1583275294276},{"path":"/Users/jordan.kasper/Documents/Repositories/vue-task-app/node_modules/vue-loader/lib/index.js","mtime":1583275300919}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5zcGFjaW5nIHsKICBtYXJnaW4tdG9wOiAyMHB4Owp9Cg=="},{"version":3,"sources":["addTask.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkIA;AACA;AACA","file":"addTask.vue","sourceRoot":"src/components","sourcesContent":["<template>\n<div>\n  <b-form inline @submit.prevent=\"validateBeforeSubmit\">\n    <label class=\"sr-only\" for=\"task-name\">Name</label>\n    <b-form-input\n      id=\"task-name\"\n      class=\"mb-2 mr-sm-2 mb-sm-0\"\n      placeholder=\"Clean Room\"\n      v-model=\"newTask.task\"\n      name=\"name\"\n      v-validate=\"'required'\"\n      :class=\"{'input': true, 'is-danger': errors.has('name') }\"\n      :state= \"taskInputState\"\n      data-cy= \"name\"\n    ></b-form-input>\n\n    <b-tooltip :disabled=\"taskShow\" :show.sync=\"taskShowToolTip\"\n    target=\"task-name\" placement=\"bottom\">\n      Task Required\n    </b-tooltip>\n\n    <b-form-select\n      class=\"mb-2 mr-sm-2 mb-sm-0\"\n      :value=\"null\"\n      :options=\"options\"\n      id=\"priority\"\n      v-model=\"newTask.priority\"\n      name=\"priority\"\n      v-validate=\"'required'\"\n      :class=\"{'input': true, 'is-danger': errors.has('priority') }\"\n      :state= \"priorityInputState\"\n    >\n    </b-form-select>\n    <b-tooltip :disabled=\"priorityShow\" :show.sync=\"priorityShowToolTip\"\n    target=\"priority\" placement=\"bottom\">\n      Priority Required\n    </b-tooltip>\n\n    <b-button id=\"submit-button\" type=\"submit\" variant=\"info\">Submit</b-button>\n\n  </b-form>\n</div>\n</template>\n\n<script>\nimport {\n  BFormInput, BForm, BFormSelect, BButton,\n} from 'bootstrap-vue';\n\n\nexport default {\n  name: 'addTask',\n\n  data() {\n    return {\n      newTask: {\n        task: '',\n        priority: '',\n        selected: '',\n      },\n      options: [\n        { value: '1', text: 'Life Changing' },\n        { value: '2', text: 'Important' },\n        { value: '3', text: 'Meh' },\n      ],\n      priorityInputState: null,\n      taskInputState: null,\n      taskError: null,\n      priorityError: null,\n      taskShow: true,\n      taskShowToolTip: false,\n      priorityShow: true,\n      priorityShowToolTip: false,\n    };\n  },\n  methods: {\n    /**\n     * Sends newly created task back to the parent component to be added to the tasks array\n     */\n    submitTask() {\n      this.$emit('taskAdded', this.newTask);\n      this.newTask = {\n        task: '',\n        priority: '',\n        selected: '',\n      };\n    },\n    validateBeforeSubmit() {\n      this.$validator.validateAll().then((result) => {\n        if (result) {\n          this.submitTask();\n          this.clearValidation();\n        } else {\n          this.clearValidation();\n          this.$validator.validate('name').then((n) => {\n            if (!n) {\n              this.taskInputState = false;\n              this.taskShow = false;\n              this.taskShowToolTip = true;\n            }\n          });\n          this.$validator.validate('priority').then((p) => {\n            if (!p) {\n              this.priorityInputState = false;\n              this.priorityShow = false;\n              this.priorityShowToolTip = true;\n            }\n          });\n        }\n      });\n    },\n    clearValidation() {\n      this.taskInputState = null;\n      this.taskIshow = true;\n      this.taskIshowToolTip = false;\n      this.priorityInputState = null;\n      this.priorityShow = true;\n      this.priorityShowToolTip = false;\n    },\n  },\n  components: {\n    BFormInput,\n    BForm,\n    BFormSelect,\n    BButton,\n  },\n};\n</script>\n\n<style scoped>\n.spacing {\n  margin-top: 20px;\n}\n</style>\n"]}]}