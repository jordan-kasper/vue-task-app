{"remainingRequest":"/Users/jordan.kasper/Documents/Repositories/vue-task-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jordan.kasper/Documents/Repositories/vue-task-app/src/components/taskList.vue?vue&type=style&index=0&id=0ed34253&scoped=true&lang=css&","dependencies":[{"path":"/Users/jordan.kasper/Documents/Repositories/vue-task-app/src/components/taskList.vue","mtime":1576520444604},{"path":"/Users/jordan.kasper/Documents/Repositories/vue-task-app/node_modules/css-loader/dist/cjs.js","mtime":1576518706614},{"path":"/Users/jordan.kasper/Documents/Repositories/vue-task-app/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1576518709501},{"path":"/Users/jordan.kasper/Documents/Repositories/vue-task-app/node_modules/postcss-loader/src/index.js","mtime":1576518708222},{"path":"/Users/jordan.kasper/Documents/Repositories/vue-task-app/node_modules/cache-loader/dist/cjs.js","mtime":1576518706066},{"path":"/Users/jordan.kasper/Documents/Repositories/vue-task-app/node_modules/vue-loader/lib/index.js","mtime":1576518709501}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmxpc3QtZ3JvdXAtaXRlbSB7CiAgZmxvYXQ6IGxlZnQ7CiAgcGFkZGluZzogMTBweDsKICBtYXJnaW4tdG9wOiAxMHB4Owp9Ci5idXR0b24tc3BhY2UgewogIG1hcmdpbi1yaWdodDogMTBweDsKfQouc3RyaWtlLXRocm91Z2ggewogIHRleHQtZGVjb3JhdGlvbjogbGluZS10aHJvdWdoOwp9Cg=="},{"version":3,"sources":["taskList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"taskList.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <h1>Task List</h1>\n    <ul class=\"list-group\" v-for=\"task in sortArrays(tasks)\" :key=\"task.name\">\n      <li\n        class=\"list-group-item d-flex justify-content-between\"\n        v-bind:class=\"taskColor(task.taskPriority)\"\n        @click=\"finishTask(task)\"\n      >\n        <span v-bind:class=\"{ 'strike-through': task.isActive }\">{{\n          task.taskValue\n        }}</span>\n        <span>\n          <a @click.prevent=\"deleteTask(task)\">Delete</a>\n        </span>\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\nexport default {\n  props: ['tasks'],\n\n  methods: {\n    /**\n     * Removes a task from the tasks\n     *\n     * @param {String} task the task from the ul that is to be removed\n     */\n    deleteTask(task) {\n      const taskIndex = this.tasks.indexOf(task);\n      this.tasks.splice(taskIndex, 1);\n    },\n    sortArrays(arrays) {\n      return _.orderBy(arrays, 'taskPriority', 'asc');\n    },\n    /**\n     * Changes the color of the task li based on priority\n     *\n     * @param {int} priority the value used to determine the color of the li\n     */\n    taskColor(priority) {\n      let classColor;\n      if (priority === '1') {\n        classColor = 'list-group-item-danger';\n      } else if (priority === '2') {\n        classColor = 'list-group-item-warning';\n      } else {\n        classColor = 'list-group-item-success';\n      }\n      return classColor;\n    },\n    /**\n     * Sets the userTask value to true or false to toggle the class value strike-through\n     * @param {String} task the task where we are checking the isActive value\n     */\n    finishTask(task) {\n      const userTask = task;\n      userTask.isActive = !userTask.isActive;\n    },\n  },\n};\n</script>\n\n<style scoped>\n.list-group-item {\n  float: left;\n  padding: 10px;\n  margin-top: 10px;\n}\n.button-space {\n  margin-right: 10px;\n}\n.strike-through {\n  text-decoration: line-through;\n}\n</style>\n"]}]}