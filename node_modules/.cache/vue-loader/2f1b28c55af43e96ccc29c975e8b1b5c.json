{"remainingRequest":"/Users/jordan.kasper/Documents/Repositories/vue-task-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jordan.kasper/Documents/Repositories/vue-task-app/src/components/addTask.vue?vue&type=style&index=0&id=4021be34&scoped=true&lang=css&","dependencies":[{"path":"/Users/jordan.kasper/Documents/Repositories/vue-task-app/src/components/addTask.vue","mtime":1583338439950},{"path":"/Users/jordan.kasper/Documents/Repositories/vue-task-app/node_modules/css-loader/dist/cjs.js","mtime":1583275294984},{"path":"/Users/jordan.kasper/Documents/Repositories/vue-task-app/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1583275300919},{"path":"/Users/jordan.kasper/Documents/Repositories/vue-task-app/node_modules/postcss-loader/src/index.js","mtime":1583275299276},{"path":"/Users/jordan.kasper/Documents/Repositories/vue-task-app/node_modules/cache-loader/dist/cjs.js","mtime":1583275294276},{"path":"/Users/jordan.kasper/Documents/Repositories/vue-task-app/node_modules/vue-loader/lib/index.js","mtime":1583275300919}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5zcGFjaW5nIHsKICBtYXJnaW4tdG9wOiAyMHB4Owp9Cg=="},{"version":3,"sources":["addTask.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiGA;AACA;AACA","file":"addTask.vue","sourceRoot":"src/components","sourcesContent":["<template>\n<div>\n  <b-form inline @submit.prevent=\"validateBeforeSubmit\">\n    <label class=\"sr-only\" for=\"inline-form-input-name\">Name</label>\n    <b-form-input\n      id=\"inline-form-input-name\"\n      class=\"mb-2 mr-sm-2 mb-sm-0\"\n      placeholder=\"Clean Room\"\n      v-model=\"newTask.task\"\n      name=\"name\"\n      v-validate=\"'required'\"\n      :class=\"{'input': true, 'is-danger': errors.has('name') }\"\n      untouched = resetForm\n    ></b-form-input>\n\n    <b-form-select\n      class=\"mb-2 mr-sm-2 mb-sm-0\"\n      :value=\"null\"\n      :options=\"options\"\n      id=\"inline-form-custom-select-pref\"\n      v-model=\"newTask.priority\"\n      name=\"priority\"\n      v-validate=\"'required'\"\n      :class=\"{'input': true, 'is-danger': errors.has('priority') }\"\n      untouched = resetForm\n\n    >\n    </b-form-select>\n    <b-button id=\"submit-button\" type=\"submit\" variant=\"info\">Submit</b-button>\n\n  </b-form>\n  <div v-if=\"showErrors\">\n    <br>\n    <span v-show=\"errors.has('name')\">{{ errors.first('name') }}</span>\n    <br>\n    <span v-show=\"errors.has('priority')\">{{ errors.first('priority') }}</span>\n  </div>\n</div>\n</template>\n\n<script>\nimport {\n  BFormInput, BForm, BFormSelect, BButton,\n} from 'bootstrap-vue';\n\n\nexport default {\n  name: 'addTask',\n\n  data() {\n    return {\n      newTask: {\n        task: '',\n        priority: '',\n        selected: '',\n      },\n      options: [\n        { value: 1, text: 'Life Changing' },\n        { value: 2, text: 'Important' },\n        { value: 3, text: 'Meh' },\n      ],\n      showErrors: true,\n    };\n  },\n  methods: {\n    /**\n     * Sends newly created task back to the parent component to be added to the tasks array\n     */\n    submitTask() {\n      this.$emit('taskAdded', this.newTask);\n      this.newTask = {\n        task: '',\n        priority: '',\n        selected: '',\n      };\n    },\n    validateBeforeSubmit() {\n      this.$validator.validateAll().then((result) => {\n        if (result) {\n          this.submitTask();\n          this.showErrors = false;\n        } else {\n          this.showErrors = true;\n        }\n      });\n    },\n  },\n  components: {\n    BFormInput,\n    BForm,\n    BFormSelect,\n    BButton,\n  },\n};\n</script>\n\n<style scoped>\n.spacing {\n  margin-top: 20px;\n}\n</style>\n"]}]}